{"version":3,"sources":["C:\\Users\\valen\\Desktop\\Labo\\nuit de l'info\\Palme_Breakers\\src\\index.ts"],"names":[],"mappings":"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","file":"main.f6962055f97bbc50b614.hot-update.js","sourcesContent":["import * as PIXI from 'pixi.js';\r\nimport { Graphics } from 'pixi.js';\r\nimport { HelloWorld } from './scenes/helloWorld';\r\n\r\n\r\nclass pays{\r\n\r\n    nom: string;\r\n    nombrePopulation: number;\r\n    nombreContamine: number;\r\n    nombreSain: number;\r\n    nombreMort: number;\r\n    tauxContagion: number; // Si, sain, pourcentage d'être contaminé\r\n    tauxMortalité: number; // Si infecté, faculté à mourir\r\n\r\n    public constructor(nom: string, nombrePopulation: number, nombreContamine: number, nombreSain: number,\r\n        nombreMort: number,tauxContagion: number,tauxMortalité: number){\r\n            this.nom = nom;\r\n            this.nombrePopulation = nombrePopulation;\r\n            this.nombreContamine = nombreContamine;\r\n            this.nombreSain = nombreSain;\r\n            this.nombreMort = nombreMort;\r\n            this.tauxContagion = tauxContagion; // Si, sain, pourcentage d'être contaminé\r\n            this.tauxMortalité = tauxMortalité; // Si infecté, faculté à mourir\r\n    }\r\n\r\n    // retourne les différences, en premier la diff de gens sains, en second les nouveaux contaminés, en troisième les morts\r\n    public updatePas(): number[]{\r\n        let diffConta = parseInt((this.nombreContamine * this.tauxContagion / 1000).toFixed(0));\r\n        this.nombreSain -= diffConta;\r\n        this.nombreContamine += diffConta;\r\n        let diffMmort = parseInt((this.tauxMortalité * this.nombreContamine / 1000).toFixed(0));\r\n        this.nombreContamine -= diffMmort;\r\n        this.nombreMort += diffMmort;\r\n        return [-diffConta, diffConta, diffMmort];\r\n    }\r\n}\r\n\r\n\r\nclass monde{\r\n    deltaTauxSoin: number; // à chaque pas de temps, le taux de soin des pays augmente du delta\r\n    tauxSoin : number = 0;\r\n    nombrePopulation: number;\r\n    nombreContamine: number;\r\n    nombreSain: number;\r\n    nombreMort: number;\r\n    listePays: pays[];\r\n\r\n    public constructor(deltaTauxSoin: number,nombrePopulation: number, nombreContamine: number\r\n        , nombreSain: number,nombreMort: number,listePays: pays[]){\r\n            this.deltaTauxSoin = deltaTauxSoin;\r\n            this.nombrePopulation = nombrePopulation;\r\n            this.nombreContamine = nombreContamine;\r\n            this.nombreSain = nombreSain;\r\n            this.nombreMort = nombreMort;\r\n            this.listePays = listePays;\r\n    }\r\n\r\n    public pasTemp(){\r\n        this.pasSoin();\r\n        let diff: number[] = this.pasPopu();\r\n        this.nombreSain += diff[0];\r\n        this.nombreContamine += diff[1];\r\n        this.nombreMort += diff[2];\r\n    }\r\n\r\n    public pasSoin(){\r\n        this.tauxSoin += this.deltaTauxSoin;\r\n        if (this.tauxSoin >= 1000){\r\n            // App close\r\n        }\r\n    }\r\n\r\n    public pasPopu(): number[]{\r\n        let diff : number[] = [0, 0, 0];\r\n        this.listePays.forEach(pays => {\r\n            let temp : number[] = pays.updatePas();\r\n            for (let i in temp){\r\n                diff[i] += temp[i];\r\n            }\r\n        })\r\n        return diff;\r\n    }\r\n}\r\n\r\n\r\nclass competence{\r\n\r\n    public constructor(name : string, description : string, effects : number[], cost : number){\r\n        this.name = name;\r\n        this.description = description;\r\n        this.effets = effects;\r\n        this.cost = cost;\r\n    }\r\n\r\n    public name : string;\r\n    public description : string;\r\n    public effets : number[];\r\n\r\n    cost : number;\r\n\r\n    bought : boolean = false;\r\n}\r\n\r\n\r\n\r\n\r\nconst main = async () => {\r\n    // Main app\r\n    let app = new PIXI.Application();\r\n\r\n    // Display application properly\r\n    document.body.style.margin = '0';\r\n    app.renderer.view.style.position = 'absolute';\r\n    app.renderer.view.style.display = 'block';\r\n\r\n    // View size = windows\r\n    app.renderer.resize(window.innerWidth, window.innerHeight);\r\n    window.addEventListener('resize', (e) => {\r\n        app.renderer.resize(window.innerWidth, window.innerHeight);\r\n    });\r\n\r\n    // Init du monde\r\n    let data = require('../assets/informationPays.json');\r\n    let listePays: pays[] = [];\r\n    let contaminationDepart: number = 100;\r\n    let tauxDepartConta : number = 20;\r\n    // Création de la liste des pays\r\n    for (const item of data) {\r\n        let pays1 = new pays(item[\"name\"],item[\"pop\"] as number,contaminationDepart,item[\"pop\"] as number-contaminationDepart,0,tauxDepartConta,15);\r\n        listePays.push(pays1);\r\n    }\r\n    // retourne le nombre de population dans le monde\r\n    function nombrePopulationTotale(listePays: pays[]){\r\n        let total:number = 0;\r\n        for (const pays of listePays) {\r\n            total += Number(pays.nombrePopulation);\r\n        }\r\n\r\n        return total;\r\n    }\r\n    let modelisationMonde: monde = new monde(3,nombrePopulationTotale(listePays),contaminationDepart*listePays.length,nombrePopulationTotale(listePays)-(contaminationDepart*listePays.length),0,listePays);\r\n    \r\n    // Load assets\r\n    document.body.appendChild(app.view);\r\n\r\n    // Create the sprite and add it to the stage\r\n    let sprite = PIXI.Sprite.from('assets/monde.webp');\r\n    sprite.width = window.innerWidth;\r\n    sprite.height = window.innerHeight;\r\n    app.stage.addChild(sprite);\r\n\r\n    let barre_fond = new Graphics();\r\n    app.stage.addChild(barre_fond)\r\n\r\n    let progress_contaminee = 0.8;\r\n    let barre_caca = new Graphics();\r\n    app.stage.addChild(barre_caca)\r\n\r\n    let progress_morte = 0.5;\r\n    let barre_prout = new Graphics();\r\n    app.stage.addChild(barre_prout)\r\n\r\n    let competenceJson = require(\"../assets/informationCompetences.json\");\r\n    let listeCompetence: competence[] = [];\r\n\r\n    for (const Objetcompetence of competenceJson[\"competences\"]) {\r\n        listeCompetence.push(new competence(Objetcompetence[\"name\"],Objetcompetence[\"description\"],Objetcompetence[\"effects\"],Objetcompetence[\"cost\"]));   \r\n    }\r\n\r\n//  render :\r\n     \r\n    let arbre = document.createElement(\"div\")\r\n    arbre.style.position = \"absolute\"\r\n    arbre.style.width = \"45%\"\r\n    arbre.style.height = \"90%\";\r\n    arbre.style.overflow = \"scroll\";\r\n    arbre.style.zIndex = \"100\";\r\n    arbre.style.backgroundColor = \"#ffffff\"\r\n    arbre.style.left = \"50%\"\r\n    arbre.style.top = \"50%\"\r\n    arbre.style.transform = \"translate(-50%, -50%)\"\r\n    document.body.appendChild(arbre)\r\n\r\n    let is_arbre_toggled = false;\r\n    let toggle_button = document.createElement(\"button\")\r\n    toggle_button.style.position = \"absolute\"\r\n    toggle_button.style.top = \"3%\"\r\n    toggle_button.style.right = \"3%\"\r\n    toggle_button.innerHTML = \"arbre\"\r\n    document.body.appendChild(toggle_button)\r\n    toggle_button.onclick = () => {\r\n        is_arbre_toggled = !is_arbre_toggled\r\n        if (is_arbre_toggled) {\r\n            arbre.style.display = \"none\"\r\n        }\r\n        else {\r\n            arbre.style.display = \"block\"\r\n        }\r\n    }\r\n\r\n    let currency = 0;\r\n\r\n    let wallet = document.createElement(\"p\")\r\n    wallet.innerHTML = currency + \" capotes percées\";\r\n    wallet.style.position = \"absolute\"\r\n    wallet.style.top = \"6%\"\r\n    wallet.style.right = \"3%\"\r\n    document.body.appendChild(wallet)   \r\n\r\n    for (let comp of listeCompetence) {\r\n        let div = document.createElement(\"div\")\r\n        let titre = document.createElement(\"h3\")\r\n        titre.innerHTML = comp.name\r\n        let desc = document.createElement(\"p\")\r\n        desc.innerHTML = comp.description\r\n\r\n        let btn = document.createElement(\"button\")\r\n        btn.innerHTML = \"Acheter\"\r\n        btn.onclick = () => {\r\n            if (!comp.bought && currency > comp.cost) {\r\n                comp.bought = true;\r\n                currency -= comp.cost;\r\n                div.style.backgroundColor = \"green\"\r\n                wallet.innerHTML = currency +\" capotes percées\"\r\n\r\n                for (let p of listePays) {\r\n                    p.tauxMortalité += comp.effets[0]\r\n                    p.tauxContagion += comp.effets[1]\r\n                    modelisationMonde.deltaTauxSoin += comp.effets[2]\r\n                }\r\n            }\r\n        }\r\n        \r\n        div.appendChild(titre)\r\n        div.appendChild(desc)\r\n        div.appendChild(btn)\r\n\r\n        arbre.appendChild(div)\r\n    }\r\n\r\n    setInterval(() => {\r\n        modelisationMonde.pasTemp()\r\n        progress_contaminee = listePays[0].tauxContagion / 1000\r\n        progress_morte = modelisationMonde.nombreMort / modelisationMonde.nombrePopulation\r\n\r\n        barre_fond.clear()\r\n        barre_caca.clear()\r\n        barre_prout.clear()\r\n\r\n        barre_fond.beginFill(0);\r\n        barre_fond.drawRect(window.innerWidth * 0.1, window.innerHeight * 0.925, window.innerWidth * 0.8 ,  window.innerHeight * 0.025)\r\n       \r\n        barre_caca.beginFill(0x00FF00);\r\n        barre_caca.drawRect(window.innerWidth * 0.1, window.innerHeight * 0.925, window.innerWidth * (progress_contaminee * 0.8) ,  window.innerHeight * 0.025)\r\n\r\n        barre_prout.beginFill(0x0000FF);\r\n        barre_prout.drawRect(window.innerWidth * 0.1, window.innerHeight * 0.925, window.innerWidth * (progress_morte * 0.8) ,  window.innerHeight * 0.025)\r\n        }, 2000)\r\n\r\n\r\n    setInterval(() => {\r\n        let capote = PIXI.Sprite.from('assets/capote.svg');\r\n        capote.interactive = true\r\n        capote.x = Math.random() * window.innerWidth\r\n        capote.y= Math.random() * window.innerHeight\r\n        capote.on(\"pointerdown\", () => {\r\n            currency += Math.round(Math.random() * 3);\r\n            app.stage.removeChild(capote)\r\n            wallet.innerHTML = currency +\" capotes percées\"\r\n        })\r\n        app.stage.addChild(capote)  \r\n    }, 3000)\r\n\r\n    \r\n\r\n\r\n    // Set scene\r\n    var scene = new HelloWorld(app);\r\n    app.stage.addChild(scene);\r\n};\r\n\r\n\r\nmain();\r\n"],"sourceRoot":""}